<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8">
  <!-- import CSS -->
  <link rel="stylesheet" href="https://unpkg.com/element-ui/lib/theme-chalk/index.css">
</head>

<body>
  <div id="app">
    <el-container>
      <el-header>Header</el-header>
      <el-main>
        <el-tabs type="border-card" @tab-click="tabClick">
          <el-tab-pane data-id="online" label="在线聊天">
            <div>在线聊天</div>
            <el-card class="box-card">
                <div v-for="o in onLineList" :key="o" class="item">
                  {{'好友ID: ' + o }}
                </div>
              </el-card>
          </el-tab-pane>
          <el-tab-pane data-id="chat" label="聊天室">聊天室</el-tab-pane>
        </el-tabs>
        <!-- <el-button @click="dialogVisible = true">Button</el-button> -->
      </el-main>
    </el-container>
    <el-dialog title="登陆" :visible.sync="dialogVisible" width="30%" :before-close="handleClose">
      <span>请登录</span>
      <el-input prefix-icon='el-icon-mobile-phone' placeholder="账号"></el-input>
      <el-input prefix-icon='el-icon-view' placeholder="密码" type='password' clearable="true"></el-input>
      <span slot="footer" class="dialog-footer">
        <el-button @click="dialogVisible = false">取 消</el-button>
        <el-button type="primary" @click="dialogVisible = false">登 陆</el-button>
      </span>
    </el-dialog>
  </div>
</body>
<!-- import socket.io  -->
<script src="https://cdn.bootcss.com/socket.io/2.1.1/socket.io.js"></script>
<!-- import Vue before Element -->
<script src="https://unpkg.com/vue/dist/vue.js"></script>
<script src="./assets/js/jquery.min.js"></script>
<!-- import JavaScript -->
<script src="https://unpkg.com/element-ui/lib/index.js"></script>
<script>
  const baseUrl = 'http://localhost:3000';
  new Vue({
    el: '#app',
    data: function () {
      return { 
        dialogVisible: false,
        onLineList:[]
        }
    },
    mounted() {
      var socket = io("ws://localhost:3001");
      console.log('socket', socket);
      socket.on('connect', function () {
        socket.emit('message', 11);
        socket.on(socket.id, function (data) {
          console.log('on msg single', data);
        }); //简单实现单-单通信

        socket.on('message', function (data) {
          console.log('on message', data);
        });

      })
    },
    methods: {
      tabClick(event) {
        const { id } = event.$el.dataset;
        console.log('tabClick', id);
        switch (id) {
          case 'online':
            $.ajax({
              url: baseUrl + '/message/onLine'
            }).then(res => {
              console.log('online', res);
              this.onLineList = res;
            }).catch(console.log)
            break;
          case 'chat':

            break;

          default:
            break;
        }

      },

      handleClose(event) {
        console.log('handleClose', event);
      }
    }
  })
</script>
<style>
  body {
    margin: 0;
    padding: 0;
  }

  .el-header,
  .el-footer {
    background-color: #B3C0D1;
    color: #333;
    text-align: center;
    line-height: 60px;
  }

  .el-aside {
    background-color: #D3DCE6;
    color: #333;
    text-align: center;
    line-height: 200px;
  }

  .el-main {
    background-color: #E9EEF3;
    color: #333;
    text-align: center;
    /* line-height: 160px; */
  }

  body>.el-container {
    margin-bottom: 40px;
  }

  .el-container:nth-child(5) .el-aside,
  .el-container:nth-child(6) .el-aside {
    line-height: 260px;
  }

  .el-container:nth-child(7) .el-aside {
    line-height: 320px;
  }

  .box-card {
    
  }

  .box-card .item{
    text-align: start;
  }
</style>

</html>